{
  "scopeName": "source.brackets-json",
  "patterns": [
    {
      "name": "string.regexp.json",
      "match": "\\(\\s*/(?:[^\\\\/]|\\\\.)+/[a-zA-Z]*\\s*\\)"
    },
    {
      "name": "comment.block.inline.json",
      "match": "(?<!\\()\\/[^\\n]*?\\/(?![a-zA-Z])"
    },
    {
      "name": "comment.line.number-sign.json",
      "match": "#.*$"
    },
    {
      "name": "punctuation.square.brackets.json",
      "match": "\\[|\\]"
    },
    {
      "name": "punctuation.separator.json",
      "match": "[,;:]"
    },
    {
      "name": "constant.numeric.hex.json",
      "match": "h'(?:[0-9a-fA-F]+)'"
    },
    {
      "name": "string.quoted.double.json",
      "match": "\"(?:[^\"\\\\]|\\\\.)*\""
    },
    {
      "name": "string.quoted.single.json",
      "match": "'(?:[^'\\\\]|\\\\.)*'"
    },
    {
      "name": "constant.numeric.json",
      "match": "-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?"
    },
    {
      "name": "constant.language.json",
      "match": "\\b(?:true|false|null)\\b"
    },
    {
      "name": "keyword.other.atword.json",
      "match": "@[A-Za-z_][A-Za-z0-9_]*"
    },
    {
      "name": "identifier.bareword.json",
      "match": "\\b[A-Za-z_][A-Za-z0-9_]*\\b"
    }
  ]
}
